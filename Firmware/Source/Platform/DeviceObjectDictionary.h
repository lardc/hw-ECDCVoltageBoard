#ifndef __DEV_OBJ_DIC_H
#define __DEV_OBJ_DIC_H

// Команды
#define ACT_ENABLE_POWER				1	// Переход в состояние ожидания
#define ACT_DISABLE_POWER				2	// Отключение блока
#define ACT_FAULT_CLEAR					3	// Очистка fault
#define ACT_WARNING_CLEAR				4	// Очистка warning

#define ACT_START_PROCESS				100	// Страрт процесса формирования импульса
#define ACT_STOP_PROCESS				101	// Остановка процесса формирования импульса

//debug commands
#define ACT_DBG_PULSE_SYNC1				50	// Одиночный импульс SYNC_1
#define ACT_DBG_PULSE_SYNC2				51	// Одиночный импульс SYNC_2

#define ACT_DBG_IS_STATE_SYNC_1			54	// Состояние цепи SYNC_1
#define ACT_DBG_IS_STATE_SYNC_2			55	// Состояние цепи SYNC_2
#define ACT_DBG_PULSE_EXT_LED			56	// Одиночный импусль внешнего светодиода

#define ACT_DBG_RELAY_ON				57	// Включение реле [REG_DBG_STATE]  //1..8
#define ACT_DBG_RELAY_OFF				58	// Выключение реле [REG_DBG_STATE] //1..8

#define ACT_DBG_LHVSELECT_LOW			59	// Подключение низковольтного источника
#define ACT_DBG_LHVSELECT_HIGH			60	// Подключение высоковольтного источника
#define ACT_DBG_CTRL48V_ENABLE			61	// Включение источника 48В
#define ACT_DBG_CTRL48V_DISABLE			62	// Выключение источника 48В
#define ACT_DBG_CTRL350V_ENABLE			63	// Включение источника 350В
#define ACT_DBG_CTRL350V_DISABLE		64	// Выключение источника 350В
#define ACT_DBG_SELECT_VHV_CTRLS		65	// Выбор диапазона измерения напряжения [REG_DBG_STATE] //1..4
#define ACT_DBG_VSENS_SELECT_SRC		66	// Выбор источника для измерения напряжения [REG_DBG_STATE] //1:LV_SENS_EN, 2:HV_SENS_EN
#define ACT_DBG_ISENS_SELECT_SRC		67	// Выбор источника для измерения тока [REG_DBG_STATE] //1:LV_CUR_SENS_EN, 2:HV_CUR_SENS_EN
#define ACT_DBG_SELECT_DAC				68	// Выбор рабочего источника тока/напряжения [REG_DBG_STATE]
#define ACT_DBG_WRITE_DAC				69	// Запись параметров в источник тока/напряжения [REG_DBG_STATE]

#define ACT_DBG_SELECT_LV_CTRLS			70	// Выбор шунта
#define ACT_DBG_SELECT_HV_CTRLS			71	// Выбор диапазона ... напряжения
#define ACT_DBG_READ_ADC_ICH			72	// Измерение тока
#define ACT_DBG_READ_ADC_VCH			73	// Измерение напряжения
#define ACT_DBG_TEST_WAVEFORM			74	// Формирование тестового сигнала [REG_DBG_STATE] //0,1

#define ACT_DBG_SELECT_V_RANGE			75	// Выбор диапазона низкого напряжения [REG_DBG_STATE] //1..3
#define ACT_DBG_PREPARE_BOARD			76	// Установка всех сигналов согласно входным параметрам

#define ACT_SAVE_TO_ROM					200	// Сохранение пользовательских данных во FLASH процессора
#define ACT_RESTORE_FROM_ROM			201	// Восстановление данных из FLASH
#define ACT_RESET_TO_DEFAULT			202	// Сброс DataTable в состояние по умолчанию

#define ACT_BOOT_LOADER_REQUEST			320	// Перезапуск процессора с целью перепрограммирования
// -----------------------------

// Регистры
// Сохраняемые регистры
#define REG_I_RANGE1_LIMIT				0	// Верхний предел диапазона 1 (в мкА)
#define REG_I_RANGE2_LIMIT				1	// Верхний предел диапазона 2 (в мкА)
#define REG_I_RANGE3_LIMIT				2	// Верхний предел диапазона 3 (в мкА)
#define REG_I_RANGE4_LIMIT				3	// Верхний предел диапазона 4 (в мА)

#define REG_DAC_I1_CONV_K_N				4	// Коэффициент пересчёта тока в ЦАП диапазона 1, числитель
#define REG_DAC_I1_CONV_K_D				5	// Коэффициент пересчёта тока в ЦАП диапазона 1, знаменатель
#define REG_DAC_I1_OFFSET				6	// Оффсет пересчёта тока в ЦАП диапазона 1

#define REG_DAC_I2_CONV_K_N				7	// Коэффициент пересчёта тока в ЦАП диапазона 2, числитель
#define REG_DAC_I2_CONV_K_D				8	// Коэффициент пересчёта тока в ЦАП диапазона 2, знаменатель
#define REG_DAC_I2_OFFSET				9	// Оффсет пересчёта тока в ЦАП диапазона 2

#define REG_DAC_I3_CONV_K_N				10	// Коэффициент пересчёта тока в ЦАП диапазона 3, числитель
#define REG_DAC_I3_CONV_K_D				11	// Коэффициент пересчёта тока в ЦАП диапазона 3, знаменатель
#define REG_DAC_I3_OFFSET				12	// Оффсет пересчёта тока в ЦАП диапазона 3

#define REG_DAC_I4_CONV_K_N				13	// Коэффициент пересчёта тока в ЦАП диапазона 4, числитель
#define REG_DAC_I4_CONV_K_D				14	// Коэффициент пересчёта тока в ЦАП диапазона 4, знаменатель
#define REG_DAC_I4_OFFSET				15	// Оффсет пересчёта тока в ЦАП диапазона 4

#define REG_V_RANGE1_LIMIT				20	// Верхний предел диапазона 1 (в мВ)
#define REG_V_RANGE2_LIMIT				21	// Верхний предел диапазона 2 (в мВ)
#define REG_V_RANGE3_LIMIT				22	// Верхний предел диапазона 3 (в мВ)
#define REG_V_RANGE4_LIMIT				23	// Верхний предел диапазона 4 (в В)

#define REG_DAC_V1_CONV_K_N				24	// Коэффициент пересчёта напряжения в ЦАП диапазона 1, числитель
#define REG_DAC_V1_CONV_K_D				25	// Коэффициент пересчёта напряжения в ЦАП диапазона 1, знаменатель
#define REG_DAC_V1_OFFSET				26	// Оффсет пересчёта напряжения в ЦАП диапазона 1

#define REG_DAC_V2_CONV_K_N				27	// Коэффициент пересчёта напряжения в ЦАП диапазона 2, числитель
#define REG_DAC_V2_CONV_K_D				28	// Коэффициент пересчёта напряжения в ЦАП диапазона 2, знаменатель
#define REG_DAC_V2_OFFSET				29	// Оффсет пересчёта напряжения в ЦАП диапазона 2

#define REG_DAC_V3_CONV_K_N				30	// Коэффициент пересчёта напряжения в ЦАП диапазона 3, числитель
#define REG_DAC_V3_CONV_K_D				31	// Коэффициент пересчёта напряжения в ЦАП диапазона 3, знаменатель
#define REG_DAC_V3_OFFSET				32	// Оффсет пересчёта напряжения в ЦАП диапазона 3

#define REG_DAC_V4_CONV_K_N				33	// Коэффициент пересчёта напряжения в ЦАП диапазона 4, числитель
#define REG_DAC_V4_CONV_K_D				34	// Коэффициент пересчёта напряжения в ЦАП диапазона 4, знаменатель
#define REG_DAC_V4_OFFSET				35	// Оффсет пересчёта напряжения в ЦАП диапазона 4


//калиброванные значения DAC для каждого диапазона напряжения
#define DAC_V200_NULL		1
#define DAC_V200_TOP		2
#define DAC_2V00_NULL		3
#define DAC_2V00_TOP		4
#define DAC_20V0_NULL		5
#define DAC_20V0_TOP		6
#define DAC_270V_NULL		7
#define DAC_270V_TOP		8

//калиброванные значения ADC для каждого диапазона напряжения
#define ADC_BLV_V200_NULL	10
#define ADC_BLV_V200_TOP	11
#define ADC_BLV_2V00_NULL	12
#define ADC_BLV_2V00_TOP	13
#define ADC_BLV_20V0_NULL	14
#define ADC_BLV_20V0_TOP	15
#define ADC_BHV_270V_NULL	16
#define ADC_BHV_270V_TOP	17
#define ADC_POT_V200_NULL	18
#define ADC_POT_V200_TOP	19
#define ADC_POT_2V00_NULL	20
#define ADC_POT_2V00_TOP	21
#define ADC_POT_20V0_NULL	22
#define ADC_POT_20V0_TOP	23
#define ADC_PHV_270V_NULL	24
#define ADC_PHV_270V_TOP	25

//калиброванные значения ADC для каждого диапазона тока
#define ADC_ILV_R1_NULL	30
#define ADC_ILV_R1_TOP	31
#define ADC_ILV_R2_NULL	32
#define ADC_ILV_R2_TOP	33
#define ADC_ILV_R3_NULL	34
#define ADC_ILV_R3_TOP	35
#define ADC_ILV_R4_NULL	36
#define ADC_ILV_R4_TOP	37
#define ADC_IHV_R1_NULL	40
#define ADC_IHV_R1_TOP	41
#define ADC_IHV_R2_NULL	42
#define ADC_IHV_R2_TOP	43
#define ADC_IHV_R3_NULL	44
#define ADC_IHV_R3_TOP	45
#define VRANGE_20V0	46
//калиброванные значения DAC для каждого диапазона тока
#define DAC_110MA_LIMIT		50
#define DAC_100MKA_NULL		51
#define DAC_100MKA_TOP		52
#define DAC_1MA_NULL		53
#define DAC_1MA_TOP			54
#define DAC_10MA_NULL		55
#define DAC_10MA_TOP		56
#define DAC_110MA_NULL		57
#define DAC_110MA_TOP		58


// Несохраняемые регистры чтения-записи
#define REG_OUTPUT_LINE					128	// Регистр контроля выходных линий
#define REG_WORK_MODE					129	// Регистр режима работы
#define REG_PULSE_TYPE					130	// Регистр типа формируемого сигнала: импульс, постоянный
#define REG_PULSE_TIME					131 // Регистр длительности импульса
#define REG_I_SET_L						132 // Регистр установки источника тока LESS HALF
#define REG_I_SET_M						133 // Регистр установки источника тока MOST HALF
#define REG_V_CUT_L						134 // Регистр напряжения отсечки в режиме источника тока LESS HALF
#define REG_V_CUT_M						135 // Регистр напряжения отсечки в режиме источника тока MOST HALF
#define REG_V_SET_L						136 // Регистр установки источника напряжения LESS HALF
#define REG_V_SET_M						137 // Регистр установки источника напряжения MOST HALF
#define REG_I_CUT_L						138 // Регистр тока отсечки в режиме источника напряжения LESS HALF
#define REG_I_CUT_M						139 // Регистр тока отсечки в режиме источника напряжения MOST HALF
#define REG_SCOPE_RATE					148

#define REG_DBG_STATE					150	// Регистр режима Отладки

// Регистры только чтение
#define REG_DEV_STATE					192	// Регистр состояния
#define REG_FAULT_REASON				193	// Регистр Fault
#define REG_DISABLE_REASON				194	// Регистр Disable
#define REG_WARNING						195	// Регистр Warning
#define REG_PROBLEM						196	// Регистр Problem
#define REG_OP_RESULT					197	// Регистр результата операции
//Результаты измерений
#define REG_V_MEAS_L						200 // Регистр установки источника напряжения LESS HALF
#define REG_V_MEAS_M						201 // Регистр установки источника напряжения MOST HALF
#define REG_I_MEAS_L						202 // Регистр тока отсечки в режиме источника напряжения LESS HALF
#define REG_I_MEAS_M						203 // Регистр тока отсечки в режиме источника напряжения MOST HALF
//
#define REG_DBG_SYNC1				251	// Регистр состояния внутреннейи линии SYNC1
#define REG_DBG_SYNC2				252	// Регистр состояния внутреннейи линии SYNC2

#define REG_EP_LAST_POINTER		250	// Указатель на последий элемент быстрого логгирования

#define REG_FWINFO_SLAVE_NID			256	// Device CAN slave node ID
#define REG_FWINFO_MASTER_NID			257	// Device CAN master node ID (if presented)
// 258 - 259
#define REG_FWINFO_STR_LEN				260	// Length of the information string record
#define REG_FWINFO_STR_BEGIN			261	// Begining of the information string record

// -----------------------------

// Operation results
#define OPRESULT_NONE					0	// No information or not finished
#define OPRESULT_OK						1	// Operation was successful
#define OPRESULT_FAIL					2	// Operation failed

//  Fault and disable codes
#define DF_NONE							0

// Problem
#define PROBLEM_NONE					0

//  Warning
#define WARNING_NONE					0

//  User Errors
#define ERR_NONE						0
#define ERR_CONFIGURATION_LOCKED		1	//  Устройство защищено от записи
#define ERR_OPERATION_BLOCKED			2	//  Операция не может быть выполнена в текущем состоянии устройства
#define ERR_DEVICE_NOT_READY			3	//  Устройство не готово для смены состояния
#define ERR_WRONG_PWD					4	//  Неправильный ключ

#endif //  __DEV_OBJ_DIC_H
